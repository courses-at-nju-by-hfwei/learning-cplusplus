问题:
  判断给定字符串中的括号是否匹配。

  输入格式:
  首行是一个正整数 (记为n)。
  接着是n行字符串。

  每个字符串最多含有 '(', '[', '{', ')', ']', '}' 六种不同字符。
  每个字符串长度不大于1000。
  字符串可以为空。我们规定空字符串是"括号匹配的"。

　输出格式:
  如果某行字符串中的括号是匹配的, 则对应行输出1, 否则输出0。

提示: 可使用栈解决该问题。
  可自行设计栈数据结构 (比如使用数组)。
  也可使用 C++ STL 提供的 stack, 基本用法如下：
  std::stack<char> bracket_stack;  // 定义栈(对象), <char> 表示栈中只允许存放字符
  bracket_stack.empty()  // 判断栈是否为空
  bracket_stack.push('(') // 将字符'('压入栈中
  bracket_stack.pop()  // 删除栈顶字符
  bracket_stack.top()  // 查看(但不删除)栈顶字符
  注意：在使用　push, pop, top 操作时, 要考虑栈是否为空的情况。


样例输入:
5
()(){}{}[]
)))(((

((())]
({[][]}{})

样例输出 (注: 最后有一个空行):
1
0
1
0
1
